<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Starbug</title><link href="https://holrock.github.io/" rel="alternate"></link><link href="https://holrock.github.io/feeds/all.atom.xml" rel="self"></link><id>https://holrock.github.io/</id><updated>2017-04-16T00:00:00+09:00</updated><entry><title>opamとOCaml 4.04.1</title><link href="https://holrock.github.io/opamtoocaml-4041.html" rel="alternate"></link><published>2017-04-16T00:00:00+09:00</published><updated>2017-04-16T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2017-04-16:opamtoocaml-4041.html</id><summary type="html">&lt;p&gt;OCaml 4.04.1が出ました。
&lt;a href="https://caml.inria.fr/pub/distrib/ocaml-4.04/notes/Changes"&gt;Changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ocaml/ocaml/pull/894"&gt;Set.mapのバグ&lt;/a&gt;も修正されているので
インストールしようと思いましたが、&lt;code&gt;opam update&lt;/code&gt;しても&lt;code&gt;opam switch list&lt;/code&gt;に出てきません。&lt;/p&gt;
&lt;p&gt;redditでも&lt;a href="https://www.reddit.com/r/ocaml/comments/65bnx5/ocaml_4041_released_dedicated_to_the_memory_of/dg9bach/"&gt;話題&lt;/a&gt;
になっています。
&lt;a href="https://github.com/ocaml/opam-repository/pull/8968"&gt;merge&lt;/a&gt;したから&lt;code&gt;opam update&lt;/code&gt;した？というコメントもありますが、
実際のところ、&lt;code&gt;opam update&lt;/code&gt;が参照しているhttps://opam.ocaml.org/urls.txtに変更が書かれていないため、リストに出てこないようです。&lt;/p&gt;
&lt;p&gt;そうこうしているうちにhomebrewの方に4.04.1が来てたので&lt;code&gt;opam switch system&lt;/code&gt;で済ませてしまいました。&lt;/p&gt;</summary><category term="ocaml"></category></entry><entry><title>Biocaml SAM header</title><link href="https://holrock.github.io/biocaml-sam-header.html" rel="alternate"></link><published>2017-02-21T00:00:00+09:00</published><updated>2017-02-21T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2017-02-21:biocaml-sam-header.html</id><summary type="html">&lt;p&gt;ocaml製のバイオインフォマティクス用ライブラリで、
&lt;a href="http://biocaml.org"&gt;biocaml&lt;/a&gt;というのがあります。&lt;/p&gt;
&lt;p&gt;BAMファイルを読みたかったので使ってみましたが、
&lt;code&gt;@HG&lt;/code&gt;ヘッダーにある&lt;code&gt;GO&lt;/code&gt;(group order)に未対応で読めなかったため、
ちょっと修正しました。&lt;/p&gt;
&lt;p&gt;opamで落ちてくる0.6.0用です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;utop&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;biocaml.unix&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;;&lt;/span&gt;
&lt;span class="n"&gt;utop&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;open&lt;/span&gt; &lt;span class="nn"&gt;Biocaml_unix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Std&lt;/span&gt;&lt;span class="o"&gt;;;&lt;/span&gt;
&lt;span class="n"&gt;utop&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nn"&gt;Bam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;open_in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a.bam&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);;&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;Bam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nn"&gt;Sam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt; &lt;span class="nn"&gt;Core_kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Or_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="nn"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nn"&gt;Core_kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Result_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Error&lt;/span&gt;
 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;unexpected tag for given header item type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;HD&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;GO&lt;/span&gt;&lt;span class="o"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/lib/unix/sam.ml b/lib/unix/sam.ml&lt;/span&gt;
&lt;span class="gh"&gt;index 9bd17ac..2da7b75 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/lib/unix/sam.ml&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/lib/unix/sam.ml&lt;/span&gt;
&lt;span class="gu"&gt;@@ -26,9 +26,13 @@ type tag_value = string * string&lt;/span&gt;
 type sort_order = [ `Unknown | `Unsorted | `Query_name | `Coordinate ]
 [@@deriving sexp]

&lt;span class="gi"&gt;+type group_order = [ `None | `Query | `Reference ]&lt;/span&gt;
&lt;span class="gi"&gt;+[@@deriving sexp]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 type header_line = {
   version : string;
   sort_order : sort_order option;
&lt;span class="gi"&gt;+  group_order: group_order option;&lt;/span&gt;
 } [@@deriving sexp]

 type ref_seq = {
&lt;span class="gu"&gt;@@ -81,6 +85,7 @@ type header_item = [&lt;/span&gt;
 type header = {
   version : string option;
   sort_order : sort_order option;
&lt;span class="gi"&gt;+  group_order : group_order option;&lt;/span&gt;
   ref_seqs : ref_seq list;
   read_groups : read_group list;
   programs : program list;
&lt;span class="gu"&gt;@@ -91,6 +96,7 @@ type header = {&lt;/span&gt;
 let empty_header = {
   version = None;
   sort_order = None;
&lt;span class="gi"&gt;+  group_order = None;&lt;/span&gt;
   ref_seqs = [];
   read_groups = [];
   programs = [];
&lt;span class="gu"&gt;@@ -192,9 +198,9 @@ let parse_header_version s =&lt;/span&gt;
     else
       err

&lt;span class="gd"&gt;-let header_line ~version ?sort_order () =&lt;/span&gt;
&lt;span class="gi"&gt;+let header_line ~version ?sort_order ?group_order () =&lt;/span&gt;
   parse_header_version version &amp;gt;&amp;gt;| fun version -&amp;gt;
&lt;span class="gd"&gt;-  {version; sort_order}&lt;/span&gt;
&lt;span class="gi"&gt;+  {version; sort_order; group_order}&lt;/span&gt;

 let ref_seq
     ~name ~length
&lt;span class="gu"&gt;@@ -269,7 +275,7 @@ let read_group&lt;/span&gt;


 let header
&lt;span class="gd"&gt;-    ?version ?sort_order ?(ref_seqs=[]) ?(read_groups=[])&lt;/span&gt;
&lt;span class="gi"&gt;+    ?version ?sort_order ?group_order ?(ref_seqs=[]) ?(read_groups=[])&lt;/span&gt;
     ?(programs=[]) ?(comments=[]) ?(others=[])
     ()
     =
&lt;span class="gu"&gt;@@ -302,7 +308,7 @@ let header&lt;/span&gt;
   |&amp;gt; List.filter_map ~f:Fn.id
   |&amp;gt; function
      | [] -&amp;gt; Ok {
&lt;span class="gd"&gt;-       version; sort_order; ref_seqs; read_groups;&lt;/span&gt;
&lt;span class="gi"&gt;+       version; sort_order; group_order; ref_seqs; read_groups;&lt;/span&gt;
        programs; comments; others;
      }
      | errs -&amp;gt; Error (Error.of_list errs)
&lt;span class="gu"&gt;@@ -407,12 +413,20 @@ let parse_sort_order = function&lt;/span&gt;
   | &amp;quot;coordinate&amp;quot; -&amp;gt; Ok `Coordinate
   | x -&amp;gt; error &amp;quot;invalid sort order&amp;quot; x sexp_of_string

&lt;span class="gi"&gt;+let parse_group_order = function&lt;/span&gt;
&lt;span class="gi"&gt;+  | &amp;quot;none&amp;quot; -&amp;gt; Ok `None&lt;/span&gt;
&lt;span class="gi"&gt;+  | &amp;quot;query&amp;quot; -&amp;gt; Ok `Query&lt;/span&gt;
&lt;span class="gi"&gt;+  | &amp;quot;reference&amp;quot; -&amp;gt; Ok `Reference&lt;/span&gt;
&lt;span class="gi"&gt;+  | x -&amp;gt; error &amp;quot;invalid group order&amp;quot; x sexp_of_string&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 let parse_header_line tvl =
   find1 `HD tvl &amp;quot;VN&amp;quot; &amp;gt;&amp;gt;= fun version -&amp;gt;
   find01 `HD tvl &amp;quot;SO&amp;quot; &amp;gt;&amp;gt;?~
   parse_sort_order &amp;gt;&amp;gt;= fun sort_order -&amp;gt;
&lt;span class="gd"&gt;-  assert_tags `HD tvl [&amp;quot;VN&amp;quot;; &amp;quot;SO&amp;quot;] &amp;gt;&amp;gt;= fun () -&amp;gt;&lt;/span&gt;
&lt;span class="gd"&gt;-  header_line ~version ?sort_order ()&lt;/span&gt;
&lt;span class="gi"&gt;+  find01 `HD tvl &amp;quot;GO&amp;quot; &amp;gt;&amp;gt;?~&lt;/span&gt;
&lt;span class="gi"&gt;+  parse_group_order &amp;gt;&amp;gt;= fun group_order -&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+  assert_tags `HD tvl [&amp;quot;VN&amp;quot;; &amp;quot;SO&amp;quot;; &amp;quot;GO&amp;quot;] &amp;gt;&amp;gt;= fun () -&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+  header_line ~version ?sort_order ?group_order ()&lt;/span&gt;

 let parse_ref_seq tvl =
   find1 `SQ tvl &amp;quot;SN&amp;quot; &amp;gt;&amp;gt;= fun name -&amp;gt;
&lt;span class="gu"&gt;@@ -844,13 +858,25 @@ let print_sort_order x =&lt;/span&gt;
     | `Coordinate -&amp;gt; &amp;quot;coordinate&amp;quot;
     )

&lt;span class="gd"&gt;-let print_header_line ({version; sort_order} : header_line) =&lt;/span&gt;
&lt;span class="gd"&gt;-  sprintf &amp;quot;@HD\tVN:%s%s&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+let print_group_order x =&lt;/span&gt;
&lt;span class="gi"&gt;+  print_tag_value&amp;#39; &amp;quot;GO&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+    (match x with&lt;/span&gt;
&lt;span class="gi"&gt;+    | `None -&amp;gt; &amp;quot;none&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+    | `Query -&amp;gt; &amp;quot;query&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+    | `Reference -&amp;gt; &amp;quot;reference&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+    )&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+let print_header_line ({version; sort_order; group_order} : header_line) =&lt;/span&gt;
&lt;span class="gi"&gt;+  sprintf &amp;quot;@HD\tVN:%s%s%s&amp;quot;&lt;/span&gt;
     version
     (match sort_order with
     | None -&amp;gt; &amp;quot;&amp;quot;
     | Some x -&amp;gt; sprintf &amp;quot;\t%s&amp;quot; (print_sort_order x)
     )
&lt;span class="gi"&gt;+    (match group_order with&lt;/span&gt;
&lt;span class="gi"&gt;+    | None -&amp;gt; &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+    | Some x -&amp;gt; sprintf &amp;quot;\t%s&amp;quot; (print_group_order x)&lt;/span&gt;
&lt;span class="gi"&gt;+    )&lt;/span&gt;

 let print_ref_seq (x:ref_seq) =
   sprintf &amp;quot;@SQ\tSN:%s\tLN:%d%s%s%s%s&amp;quot;
&lt;span class="gu"&gt;@@ -1011,12 +1037,12 @@ module MakeIO(Future : Future.S) = struct&lt;/span&gt;
           Pipe.junk lines &amp;gt;&amp;gt;= fun () -&amp;gt;
           parse_header_item line |&amp;gt; function
           | Error _ as e -&amp;gt; return e
&lt;span class="gd"&gt;-          | Ok (`HD ({version; sort_order} : header_line)) -&amp;gt; (&lt;/span&gt;
&lt;span class="gi"&gt;+          | Ok (`HD ({version; sort_order; group_order} : header_line)) -&amp;gt; (&lt;/span&gt;
             match hdr.version with
             | Some _ -&amp;gt;
               return (Or_error.error_string &amp;quot;multiple @HD lines not allowed&amp;quot;)
             | None -&amp;gt;
&lt;span class="gd"&gt;-              loop {hdr with version = Some version; sort_order}&lt;/span&gt;
&lt;span class="gi"&gt;+              loop {hdr with version = Some version; sort_order; group_order}&lt;/span&gt;
           )
           | Ok (`SQ x) -&amp;gt; loop {hdr with ref_seqs = x::hdr.ref_seqs}
           | Ok (`RG x) -&amp;gt; loop {hdr with read_groups = x::hdr.read_groups}
&lt;span class="gu"&gt;@@ -1028,14 +1054,14 @@ module MakeIO(Future : Future.S) = struct&lt;/span&gt;
     in
     loop empty_header &amp;gt;&amp;gt;| function
     | Error _ as e -&amp;gt; e
&lt;span class="gd"&gt;-    | Ok ({version; sort_order; _} as x) -&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    | Ok ({version; sort_order; group_order; _} as x) -&amp;gt;&lt;/span&gt;
       let ref_seqs = List.rev x.ref_seqs in
       let read_groups = List.rev x.read_groups in
       let programs = List.rev x.programs in
       let comments = List.rev x.comments in
       let others = List.rev x.others in
       header
&lt;span class="gd"&gt;-        ?version ?sort_order ~ref_seqs ~read_groups&lt;/span&gt;
&lt;span class="gi"&gt;+        ?version ?sort_order ?group_order ~ref_seqs ~read_groups&lt;/span&gt;
         ~programs ~comments ~others ()


&lt;span class="gu"&gt;@@ -1064,7 +1090,7 @@ module MakeIO(Future : Future.S) = struct&lt;/span&gt;
     (match h.version with
     | None -&amp;gt; Deferred.unit
     | Some version -&amp;gt;
&lt;span class="gd"&gt;-      write_line w (print_header_line {version; sort_order=h.sort_order})&lt;/span&gt;
&lt;span class="gi"&gt;+      write_line w (print_header_line {version; sort_order=h.sort_order; group_order=h.group_order})&lt;/span&gt;
     ) &amp;gt;&amp;gt;= fun () -&amp;gt;
     Deferred.List.iter h.ref_seqs ~f:(fun x -&amp;gt;
       write_line w (print_ref_seq x)
&lt;span class="gh"&gt;diff --git a/lib/unix/sam.mli b/lib/unix/sam.mli&lt;/span&gt;
&lt;span class="gh"&gt;index 1fbf606..ff4da2a 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/lib/unix/sam.mli&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/lib/unix/sam.mli&lt;/span&gt;
&lt;span class="gu"&gt;@@ -28,6 +28,9 @@ type tag_value = private string * string&lt;/span&gt;
 type sort_order = [ `Unknown | `Unsorted | `Query_name | `Coordinate ]
 [@@deriving sexp]

&lt;span class="gi"&gt;+type group_order = [ `None | `Query | `Reference ]&lt;/span&gt;
&lt;span class="gi"&gt;+[@@deriving sexp]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 (** @HD. A header consists of different types of lines. Confusingly, one of
     these types is called {i the} &amp;quot;header line&amp;quot;, which is what this
     type refers to. It does not refer generically to any line within a
&lt;span class="gu"&gt;@@ -35,6 +38,7 @@ type sort_order = [ `Unknown | `Unsorted | `Query_name | `Coordinate ]&lt;/span&gt;
 type header_line = private {
   version : string; (** VN *)
   sort_order : sort_order option; (** SO *)
&lt;span class="gi"&gt;+  group_order: group_order option; (** GO *)&lt;/span&gt;
 } [@@deriving sexp]

 (** @SQ. Reference sequence. *)
&lt;span class="gu"&gt;@@ -103,6 +107,7 @@ type header_item = private [&amp;lt;&lt;/span&gt;
 type header = private {
   version : string option;
   sort_order : sort_order option;
&lt;span class="gi"&gt;+  group_order : group_order option;&lt;/span&gt;
   ref_seqs : ref_seq list;
   read_groups : read_group list;
   programs : program list;
&lt;span class="gu"&gt;@@ -229,6 +234,7 @@ include module type of MakeIO(Future_unix)&lt;/span&gt;
 val header_line
   :  version:string
   -&amp;gt; ?sort_order:sort_order
&lt;span class="gi"&gt;+  -&amp;gt; ?group_order:group_order&lt;/span&gt;
   -&amp;gt; unit
   -&amp;gt; header_line Or_error.t

&lt;span class="gu"&gt;@@ -264,6 +270,7 @@ val read_group&lt;/span&gt;
 val header
    : ?version:string
   -&amp;gt; ?sort_order:sort_order
&lt;span class="gi"&gt;+  -&amp;gt; ?group_order:group_order&lt;/span&gt;
   -&amp;gt; ?ref_seqs : ref_seq list
   -&amp;gt; ?read_groups : read_group list
   -&amp;gt; ?programs : program list
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;utop&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="nn"&gt;Bam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;open_in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a.bam&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);;&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;Bam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nn"&gt;Sam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt; &lt;span class="nn"&gt;Core_kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Or_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="nn"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nn"&gt;Core_kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Or_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;                                                                                                                                                                  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Core_kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Result_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Ok&lt;/span&gt; &lt;span class="o"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;abstr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;abstr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;masterブランチはビルド失敗するし、ドキュメントとも乖離が激しいので
積極的にメンテナンスはされていないようですね。&lt;/p&gt;
&lt;p&gt;追記。プルリクエスト取り込んでもらいました。&lt;/p&gt;</summary><category term="ocaml"></category></entry><entry><title>ZIL</title><link href="https://holrock.github.io/zil.html" rel="alternate"></link><published>2016-12-04T00:00:00+09:00</published><updated>2016-12-04T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-12-04:zil.html</id><summary type="html">&lt;p&gt;なんとなくZ-Machine周りについて調べていたので、ZILについてメモしておきます。&lt;/p&gt;
&lt;p&gt;ZIL(Zork Implementation Language)はZorkなどで知られるZ-Machineで動作するInteractive Fiction(IF)を記述するための言語です。&lt;/p&gt;
&lt;p&gt;まず、Z-Machine関係の用語を説明します。&lt;/p&gt;
&lt;h2&gt;IF&lt;/h2&gt;
&lt;p&gt;IFはいわゆるテキストアドベンチャーゲームです。
テキストをコマンドとして入力して進行していくゲームで、
&lt;a href="https://ja.wikipedia.org/wiki/ゾーク#.E3.82.B3.E3.83.9E.E3.83.B3.E3.83.89.E5.85.A5.E5.8A.9B"&gt;zork&lt;/a&gt;を
見るとどんなものかはすぐわかります。&lt;/p&gt;
&lt;h2&gt;Z-Machine&lt;/h2&gt;
&lt;p&gt;Z-MachineはIFのための仮想マシンです。
Infocom社によって作られました。&lt;/p&gt;
&lt;p&gt;多様なプラットフォームへの移植性を確保するため、Zork1などはZ-Machine上で動くようになっていました。&lt;/p&gt;
&lt;p&gt;Z-MachineはZILをコンパイルして出力されるZ-codeと呼ばれるを命令を解釈して実行します。&lt;/p&gt;
&lt;p&gt;Z-Machineの仕様は
&lt;a href="http://inform-fiction.org/zmachine/standards/z1point1/index.html"&gt;The Z-Machine Standards Document&lt;/a&gt;
にまとまっていますが、フラグなどの扱いについて一部、&lt;a href="https://github.com/SamB/ztools"&gt;ztools&lt;/a&gt;との相違が見られました。&lt;/p&gt;
&lt;h2&gt;ZIL&lt;/h2&gt;
&lt;p&gt;ここから本題です。&lt;/p&gt;
&lt;p&gt;ZILの情報は&lt;a href="http://www.ifwiki.org/index.php/ZIL"&gt;ZIL Manual&lt;/a&gt;などにあります。&lt;/p&gt;
&lt;p&gt;この後に出てくるソースコードは、ZIL Manualからの引用になります。&lt;/p&gt;
&lt;h3&gt;BASIC&lt;/h3&gt;
&lt;p&gt;オリジナルのZorkは MIT Design Language(MDL)で書かれていたとあり、ZILにもその影響が強く見られます。&lt;/p&gt;
&lt;p&gt;サンプルコードを見て見ましょう。
&lt;del&gt;MDLと違い、式にはangle bracket (&amp;lt;&amp;gt;) だけが使われます。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;ここ不正確だったので修正。ご指摘ありがとうございます。
フォームにangle bracket (&amp;lt;&amp;gt;), listに括弧が使われます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;*&lt;/span&gt; &lt;span class="nv"&gt;&amp;lt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="nv"&gt;5&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;&amp;lt;/&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="nv"&gt;2&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;5&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;括弧さえ読み替えれば、みたまんまLISPですね。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;丸括弧も使用されますが、グループ化のみに使用されているようです。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;例えば、&lt;code&gt;cond&lt;/code&gt; の条件と式には丸括弧が使用されます。
関数引数なども丸括弧が使われています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;COND&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;if-this-is-true&amp;gt;&lt;/span&gt;
       &lt;span class="nv"&gt;&amp;lt;then-do-this&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ちなみに&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;は&lt;code&gt;FALSE&lt;/code&gt;を意味します。&lt;/p&gt;
&lt;p&gt;次は関数定義を見て見ます。
関数定義には &lt;code&gt;ROUTINE&lt;/code&gt; を使用します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;ROUTINE&lt;/span&gt; &lt;span class="nv"&gt;RHYME&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AUX&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;ARG1&lt;/span&gt; &lt;span class="nv"&gt;ARG2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;SET&lt;/span&gt; &lt;span class="nv"&gt;ARG1&lt;/span&gt; &lt;span class="nv"&gt;30&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;SET&lt;/span&gt; &lt;span class="nv"&gt;ARG2&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;September&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;LINE-IN-RHYME&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG1&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG2&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;SET&lt;/span&gt; &lt;span class="nv"&gt;ARG1&lt;/span&gt; &lt;span class="nv"&gt;28&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;SET&lt;/span&gt; &lt;span class="nv"&gt;ARG2&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;February&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;LINE-IN-RHYME&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG1&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG2&amp;gt;&lt;/span&gt;
      &lt;span class="nv"&gt;etc.&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;&amp;lt;ROUTINE&lt;/span&gt; &lt;span class="nv"&gt;LINE-IN-RHYME&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ARG-A&lt;/span&gt; &lt;span class="nv"&gt;ARG-B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;&amp;lt;TELL&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG-A&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; days hath &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ARG-B&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;CR&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ここでは &lt;code&gt;RHYME&lt;/code&gt; 、 &lt;code&gt;LINE-IN-RHYME&lt;/code&gt; の二つのルーチンを定義しています。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RHYME&lt;/code&gt;の直後にある&lt;code&gt;("AUX" ARG1 ARG2)&lt;/code&gt;はローカル変数宣言になります。&lt;code&gt;"AUX"&lt;/code&gt;以降の&lt;code&gt;ARG1&lt;/code&gt;, &lt;code&gt;ARG2&lt;/code&gt;の二つの変数を宣言しています。
通常の引数と違い、呼び出し元から渡されるものではありません。&lt;/p&gt;
&lt;p&gt;逆に&lt;code&gt;LINE-IN-RHYME&lt;/code&gt;の&lt;code&gt;ARG-A&lt;/code&gt;, &lt;code&gt;ARG-B&lt;/code&gt;は呼び出し元から渡された引数になります。&lt;/p&gt;
&lt;p&gt;後、目につくのは&lt;code&gt;.ARG1&lt;/code&gt;の&lt;code&gt;.&lt;/code&gt;ですね。これはローカル変数の値を参照する意味になります。&lt;/p&gt;
&lt;p&gt;ちなみに、グローバル変数を参照する場合は&lt;code&gt;,&lt;/code&gt;を使います。
次のコードは&lt;code&gt;PIZZA-EATEN&lt;/code&gt;グローバル変数の値をインクリメントするコードです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;SETG PIZZA-EATEN &amp;lt;+ ,PIZZA-EATEN 1&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ROOM, OBJECT, ROUTINE&lt;/h2&gt;
&lt;p&gt;ZILには大きく分けて3つの要素があります。&lt;/p&gt;
&lt;p&gt;一つは先ほどのROUTINE。これはそのまま関数で、インプットに対するアクションを定義したり色々な用途に使用されます。&lt;/p&gt;
&lt;p&gt;残りの二つは、ROOMとOBJECTです。&lt;/p&gt;
&lt;p&gt;ROOMは、playerが移動したり調べたりすることができる場所のことです。今でいうLEVELに近いかもしれません。&lt;/p&gt;
&lt;p&gt;OBJECTはそのままゲーム中に存在するオブジェクトです。
ROOMとOBJECTの定義方法は次の通りです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;ROOM&lt;/span&gt; &lt;span class="nv"&gt;LIVING-ROOM&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;LOC&lt;/span&gt; &lt;span class="nv"&gt;ROOMS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;DESC&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Living Room&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;EAST&lt;/span&gt; &lt;span class="nv"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;KITCHEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;WEST&lt;/span&gt; &lt;span class="nv"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;STRANGE-PASSAGE&lt;/span&gt; &lt;span class="nv"&gt;IF&lt;/span&gt; &lt;span class="nv"&gt;CYCLOPS-FLED&lt;/span&gt; &lt;span class="nv"&gt;ELSE&lt;/span&gt;
          &lt;span class="s"&gt;&amp;quot;The wooden door is nailed shut.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;DOWN&lt;/span&gt; &lt;span class="nv"&gt;PER&lt;/span&gt; &lt;span class="nv"&gt;TRAP-DOOR-EXIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ACTION&lt;/span&gt; &lt;span class="nv"&gt;LIVING-ROOM-F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FLAGS&lt;/span&gt; &lt;span class="nv"&gt;RLANDBIT&lt;/span&gt; &lt;span class="nv"&gt;ONBIT&lt;/span&gt; &lt;span class="nv"&gt;SACREDBIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;GLOBAL&lt;/span&gt; &lt;span class="nv"&gt;STAIRS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;THINGS&lt;/span&gt; &lt;span class="nv"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;NAILS&lt;/span&gt; &lt;span class="nv"&gt;NAILS-PSEUDO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;OBJECT&lt;/span&gt; &lt;span class="nv"&gt;LANTERN&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;LOC&lt;/span&gt; &lt;span class="nv"&gt;LIVING-ROOM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;SYNONYM&lt;/span&gt; &lt;span class="nv"&gt;LAMP&lt;/span&gt; &lt;span class="nv"&gt;LANTERN&lt;/span&gt; &lt;span class="nv"&gt;LIGHT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ADJECTIVE&lt;/span&gt; &lt;span class="nv"&gt;BRASS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;DESC&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;brass lantern&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FLAGS&lt;/span&gt; &lt;span class="nv"&gt;TAKEBIT&lt;/span&gt; &lt;span class="nv"&gt;LIGHTBIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ACTION&lt;/span&gt; &lt;span class="nv"&gt;LANTERN-F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;FDESC&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A battery-powered lantern is on the trophy case.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;LDESC&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;There is a brass lantern (battery-powered) here.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;SIZE&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでLIVING-ROOMにLANTERNが置かれたことになります。&lt;/p&gt;
&lt;h2&gt;Input, Praser, Handler&lt;/h2&gt;
&lt;p&gt;IFはユーザーからのインプットをパースしてアクションを起こします。たとえば&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;HIT UNCLE OTTO WITH THE HAMMER
You knock some sense back into Uncle Otto, and he stops
insisting that he&amp;#39;s Napoleon Bonaparte.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;HIT UNCLE OTTO WITH THE HAMMER&lt;/code&gt;がユーザーインプットで、2行目からが反応です。&lt;/p&gt;
&lt;p&gt;ZorkシリーズなどInfocomのゲームは、上記のような文法をもった構文が使えたことで有名です。&lt;/p&gt;
&lt;p&gt;パーサーはインプットを解析し、PRSA, PRSO, PRSIと呼ばれる要素へ分解します。&lt;/p&gt;
&lt;p&gt;先ほどの例では次のようになります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PRSA -&amp;gt; HIT&lt;/li&gt;
&lt;li&gt;PRSO -&amp;gt; the UNCLE OTTO object&lt;/li&gt;
&lt;li&gt;PRSI -&amp;gt; the HAMMER object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分解が終わると、HandlerはPRSIオブジェクトのACTION ROUTINEを呼び出します。&lt;/p&gt;
&lt;p&gt;PRSIのACTION ROUTINEで終了しなかった場合、次にPRSOのACTION ROUTINEが呼ばれ、
動詞のデフォルトアクションが呼ばれるまで連鎖します。&lt;/p&gt;
&lt;p&gt;こうやってインプットをからゲーム内オブジェクトにインタラクションしていくことでゲームが進行していきます。&lt;/p&gt;
&lt;p&gt;面白いのは、同じLANTERNでも&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;THROW THE NERF BALL AT THE BRASS LANTERN

THROW THE BRASS LANTERN AT THE NERF BALL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;では前者の場合、LANTERNはPRSI、後者だとPRSOになるところです。&lt;/p&gt;
&lt;p&gt;動詞の定義はSYNTAXで定義します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;SYNTAX GET OBJECT = V-TAKE&amp;gt;
&amp;lt;SYNTAX GET IN OBJECT = V-ENTER&amp;gt;
&amp;lt;SYNTAX GET ON OBJECT = V-ENTER&amp;gt;
&amp;lt;SYNTAX GET OFF OBJECT = V-EXIT&amp;gt;
&amp;lt;SYNTAX GET OBJECT WITH OBJECT = V-TAKE-WITH&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OBJECTとなっているところは名詞で置き換えられます。&lt;/p&gt;
&lt;p&gt;V-TAKEなどはROUTINE名です。
同じ動詞でもsyntaxによって振り分けることができます。&lt;/p&gt;
&lt;p&gt;またSYNTAX内の括弧で囲まれた(HAVE)などのトークンは特別な意味を持ち、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;SYNTAX&lt;/span&gt; &lt;span class="nv"&gt;GIVE&lt;/span&gt; &lt;span class="nv"&gt;OBJECT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;HAVE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="nv"&gt;TO&lt;/span&gt; &lt;span class="nv"&gt;OBJECT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ON-GROUND&lt;/span&gt; &lt;span class="nv"&gt;IN-ROOM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;V-GIVE&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この例では、playerがOBJECTを持っていない場合、パース時にエラーとなります。&lt;/p&gt;
&lt;p&gt;ACTIONやSYNTAXでいかに頑張るかが開発者の腕の見せ所のようです。
ZILは英語を前提として作られているため、日本語への移植などは大変だったのではないでしょうか。&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;他にもEventなどがありますが、ここでは省略します。 興味がある方はZIL Manualを読んで見てください。&lt;/p&gt;
&lt;p&gt;ZILはIFを作る目的でデザインされたコンパクトな言語です。
あえて今テキストアドベンチャーを作るためにZILを使う必要はありませんが、IFの構成要素を知るためにZILを調べて見るのも面白いと思います。&lt;/p&gt;</summary><category term="z-machine"></category><category term="lisp"></category><category term="zil"></category></entry><entry><title>nginxでimage filter</title><link href="https://holrock.github.io/nginxdeimage-filter.html" rel="alternate"></link><published>2016-11-10T00:00:00+09:00</published><updated>2016-11-10T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-11-10:nginxdeimage-filter.html</id><summary type="html">&lt;p&gt;前回、画像プロキシを使って外部画像を読み込むようにしました。&lt;/p&gt;
&lt;p&gt;画像サイズが大きいものもあり、PageSpeed Insightsに怒られることがあります。
今回は画像をキャッシュしつつリサイズします。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tech.actindi.net/3571355260"&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;すべて同一サーバーで運用しています。&lt;/p&gt;
&lt;h1&gt;tlsimg.cattoy.info&lt;/h1&gt;
&lt;p&gt;画像フロントサーバー&lt;/p&gt;
&lt;p&gt;httpsで待ち受けるサーバーです。ここが入り口になります。&lt;/p&gt;
&lt;p&gt;キャッシュもここでします。&lt;/p&gt;
&lt;p&gt;proxy_cache_keyに使用する$arg_w, $arg_h, arg_qがリサイズパラメータになります。
それぞれ幅、高さ、jpeg qualityです。&lt;/p&gt;
&lt;p&gt;バックエンドがomacなので、$document_uriにhmacのキーを含んでいるため、サイズ指定以外は$document_uri があればユニークになります。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;tlsimg.cattoy.info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://localhost:8889&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache&lt;/span&gt; &lt;span class="s"&gt;TLSIMG&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_key&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$host$document_uri$is_args&amp;amp;$arg_w&amp;amp;$arg_h&amp;amp;$arg_q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_lock&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_valid&lt;/span&gt; &lt;span class="s"&gt;30d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_valid&lt;/span&gt; &lt;span class="s"&gt;any&lt;/span&gt; &lt;span class="s"&gt;15s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_cache_use_stale&lt;/span&gt; &lt;span class="s"&gt;error&lt;/span&gt; &lt;span class="s"&gt;timeout&lt;/span&gt; &lt;span class="s"&gt;invalid_header&lt;/span&gt; &lt;span class="s"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_http_version&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;30d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;localhost:8889&lt;/h1&gt;
&lt;p&gt;画像リサイズサーバー&lt;/p&gt;
&lt;p&gt;クエリーをみて、リサイズします。
クエリーがない場合はそのまま画像プロキシへリクエストを流します。&lt;/p&gt;
&lt;p&gt;画像プロキシ側にはurlパラメータを引き渡さないといけないので、ちょっと面倒です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;8889&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_w&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;rewrite&lt;/span&gt; &lt;span class="s"&gt;^/(.*)&lt;/span&gt;$ &lt;span class="s"&gt;/original/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="s"&gt;last&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$height&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$quality&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_w&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;(\d*))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_h&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;(\d*))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$height&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_q&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;(100|[1-9][0-9]|[1-9]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$quality&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kn"&gt;rewrite&lt;/span&gt; &lt;span class="s"&gt;^/(.*)&lt;/span&gt;$ &lt;span class="s"&gt;/resize/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="s"&gt;last&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/resize/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;rewrite&lt;/span&gt; &lt;span class="s"&gt;^/resize/([^/]+)&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$1?url=$arg_url&lt;/span&gt; &lt;span class="s"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://omac/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;image_filter&lt;/span&gt;                &lt;span class="s"&gt;resize&lt;/span&gt; &lt;span class="nv"&gt;$width&lt;/span&gt; &lt;span class="nv"&gt;$height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;image_filter_jpeg_quality&lt;/span&gt;   &lt;span class="nv"&gt;$quality&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;image_filter_buffer&lt;/span&gt;         &lt;span class="s"&gt;20M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;image_filter_interlace&lt;/span&gt;      &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;415&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;@empty&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/original/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://omac/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@empty&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kn"&gt;empty_gif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;画像プロキシ&lt;/h1&gt;
&lt;p&gt;最後に画像プロキシ側の設定です。
ここは特に変わっていません。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="nt"&gt;upstream&lt;/span&gt; &lt;span class="nt"&gt;omac&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;議論&lt;/h1&gt;
&lt;p&gt;もっと簡単な方法はありそうです。&lt;/p&gt;
&lt;p&gt;本来の画像URLにw,h,qクエリパラメータがある場合はおかしくなりそうなので、
別途ヘッダで渡すなどした方が良いと思います。
今回はrails側のコードをなるべく変更せずに使用するため、クエリパラメーターに含めました。&lt;/p&gt;
&lt;p&gt;リサイズ時にエラーになってしまうとempty_gifがキャッシュされてしまい、以後画像が見えなくなるのでこれも要対応です。&lt;/p&gt;</summary><category term="cattoy"></category><category term="nginx"></category></entry><entry><title>AllegroGraph その3</title><link href="https://holrock.github.io/allegrograph-sono3.html" rel="alternate"></link><published>2016-11-07T00:00:00+09:00</published><updated>2016-11-07T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-11-07:allegrograph-sono3.html</id><summary type="html">&lt;p&gt;前回全然lispじゃなかった。&lt;/p&gt;
&lt;p&gt;今回はACLから繋いでみます。&lt;/p&gt;
&lt;h1&gt;準備&lt;/h1&gt;
&lt;h2&gt;Allegro CL 10.0 Free Express Editionのインストール&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Macの場合X11とかGTKとか必要とありますが、slimeから使うならなくてもいけます&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;mlispをつくる&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AllegroGraph clientはalispでは動かないのでmlispを作ります&lt;/li&gt;
&lt;li&gt;&lt;a href="http://franz.com/support/faq/#s3q7"&gt;faq&lt;/a&gt;にあるので、いちどalispを起動してから次にコードを実行します&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;build-lisp-image&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sys:mlisp.dxl&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:case-mode&lt;/span&gt; &lt;span class="ss"&gt;:case-sensitive-lower&lt;/span&gt;
          &lt;span class="ss"&gt;:include-ide&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="ss"&gt;:restart-app-function&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;probe-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sys:mlisp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;delete-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sys:mlisp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sys:copy-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sys:alisp&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sys:mlisp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;mlispができたらslimeの設定を通します&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq inferior-lisp-program &amp;quot;/Applications/AllegroCLexpress.app/Contents/Resources/mlisp&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;AllegroGraphのポート指定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AllegroGraphをVirtualboxで動かしていて、それにslimeから接続する場合、必要なポートは&lt;ul&gt;
&lt;li&gt;10035&lt;/li&gt;
&lt;li&gt;SessionPort(random)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SessionPortがランダムなのはポートフォワーディングする時に面倒なのでコンフィグで指定します&lt;ul&gt;
&lt;li&gt;/home/franz/ag/lib/agraph.cfgが設定ファイルです&lt;/li&gt;
&lt;li&gt;SessionPorts 8080-8081&lt;/li&gt;
&lt;li&gt;みたいに適当なポートレンジを書き加えます&lt;/li&gt;
&lt;li&gt;Virtualboxから該当ポートへのフォワーディングを指定してAllegroGraphを起動&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;AllegroGraph Clientダウンロードする&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://franz.com/agraph/downloads/clients"&gt;ここ&lt;/a&gt;からダウンロード(メールアドレスが必要)&lt;/li&gt;
&lt;li&gt;MacのExpress EditionはAllegro CL 10.0 (non-SMP) 32-bit Mac OS Xが対応します&lt;/li&gt;
&lt;li&gt;ダウンロード後、展開して終了&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;接続&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;tuple-storeはその2で作ったcattoyを使います&lt;/li&gt;
&lt;li&gt;せっかくなのでprologで&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/path/to/agraph-6.1.3-macosx86-client-lisp-acl10.0/agraph.fasl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;in-package&lt;/span&gt; &lt;span class="ss"&gt;:db.agraph.user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;enable-!-reader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;; (setf *default-ag-http-port* 10035) ; ポートフォワーディングで変えてる場合はここで指定&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;open-triple-store&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cattoy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;triple-count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;; =&amp;gt; 451&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;:prolog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt; &lt;span class="ss"&gt;:prolog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;register-namespace&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sc&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:errorp&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;?x&lt;/span&gt; &lt;span class="nv"&gt;?y&lt;/span&gt; &lt;span class="nv"&gt;?z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;q-&lt;/span&gt; &lt;span class="nv"&gt;?x&lt;/span&gt; &lt;span class="nv"&gt;!sc:name&lt;/span&gt; &lt;span class="nv"&gt;?y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;; =&amp;gt; ((&amp;quot;http://www.cattoy.info/cats/1&amp;quot; &amp;quot;みけ&amp;quot; nil))&lt;/span&gt;

&lt;span class="c1"&gt;; こっちはattempt to call `#:q-/3&amp;#39; which is an undefined function.になって動かなかった&lt;/span&gt;
&lt;span class="c1"&gt;; なんでだろう&lt;/span&gt;
&lt;span class="c1"&gt;; (?- (q- ?x ?y ?z))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;とりあえず問い合わせまでできるようになりました&lt;/p&gt;
&lt;p&gt;今回と前回使用したcattoyのturtleをダウンロードできるようにしています。&lt;/p&gt;
&lt;p&gt;https://www.cattoy.info/cattoy.ttl&lt;/p&gt;
&lt;p&gt;SPARQL エンドポイント置くのはちょっとサーバーリソース的に面倒だったのでデータだけです。&lt;/p&gt;</summary><category term="lisp"></category><category term="allegrograph"></category></entry><entry><title>AllegroGraph その2</title><link href="https://holrock.github.io/allegrograph-sono2.html" rel="alternate"></link><published>2016-11-04T00:00:00+09:00</published><updated>2016-11-04T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-11-04:allegrograph-sono2.html</id><summary type="html">&lt;p&gt;AllegroGraphが動くようになったので、データ作って投入します。&lt;/p&gt;
&lt;p&gt;データは&lt;a href="https://www.cattoy.info"&gt;cattoy&lt;/a&gt;から作ります。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/holrock/cattoy/commit/202415749077a2820bff11d3544af3fc03453b65"&gt;こんなかんじ&lt;/a&gt;
にRDF出力コードを仕込んだので、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;RDF&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="no"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_rdf&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/tmp/cat.ttl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_ttl&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でファイルに吐き出します。
なかみはこんなかんじです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@prefix&lt;/span&gt; &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nc"&gt;.org&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;@prefix&lt;/span&gt; &lt;span class="nt"&gt;xsd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.w3.org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;2001&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;XMLSchema&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;histories&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:creator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cats&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:itemReviewed&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;toys&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:ratingValue&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:reviewBody&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;羽よりネズミが好き。音がして嚙めるものが好きっぽい&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;histories&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:creator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cats&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:itemReviewed&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;toys&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:ratingValue&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:reviewBody&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;たまに猫キックしてた&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="nc"&gt;.cattoy.info&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;cats&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nd"&gt;:name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;みけ&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これをWebViewに取り込んで、クエリを投げます&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;prefix&lt;/span&gt; &lt;span class="nt"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;schema&lt;/span&gt;&lt;span class="nc"&gt;.org&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;select&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nt"&gt;history&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;みけ&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;creator&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;reviewBody&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ratingValue&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;^^&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;w3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2001&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;XMLSchema&lt;/span&gt;&lt;span class="m"&gt;#intege&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;結果は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;head&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;vars&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;history&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;body&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="s2"&gt;&amp;quot;results&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;bindings&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;history&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.cattoy.info/histories/107&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;body&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;これのピンク色のやつ\r\n音に期待したけど全然だめ。だめ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;literal&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;cat&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.cattoy.info/cats/1&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;cat&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.cattoy.info/cats/1&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;history&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.cattoy.info/histories/2&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;body&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;literal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;鉄のストラップの方に興味が行くほど、光線に興味なし。&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="c1"&gt;// snip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;無事取れてますが、これがないとダメでした。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  sc:ratingValue &amp;quot;-1&amp;quot;^^&amp;lt;http://www.w3.org/2001/XMLSchema#integer&amp;gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;しかし、述語選ぶのが大変ですね。&lt;/p&gt;</summary><category term="lisp"></category><category term="allegrograph"></category><category term="ruby"></category><category term="cattoy"></category></entry><entry><title>AllegroGraph その1</title><link href="https://holrock.github.io/allegrograph-sono1.html" rel="alternate"></link><published>2016-11-03T00:00:00+09:00</published><updated>2016-11-03T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-11-03:allegrograph-sono1.html</id><summary type="html">&lt;p&gt;AllegroGraphを動かしてみます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://franz.com/agraph/downloads/"&gt;http://franz.com/agraph/downloads/&lt;/a&gt;からAllegroGraph Virtual Machineをダウンロード&lt;/li&gt;
&lt;li&gt;展開してVirtualboxから読み込む&lt;/li&gt;
&lt;li&gt;Virtualboxで仮想マシンを新規作成&lt;ul&gt;
&lt;li&gt;type linux&lt;/li&gt;
&lt;li&gt;version ubuntu 64bit&lt;/li&gt;
&lt;li&gt;ディスク作成時にすでにあるディスクを使用するからAllegroGraph 6.0 Virtual Machine.vmdkを選択&lt;/li&gt;
&lt;li&gt;ネットワークのポートフォワーディングでホストポート10034(なんでもいい)からゲストポート10035へフォワーディング設定する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VMを起動&lt;/li&gt;
&lt;li&gt;franz/allegrographでログイン&lt;/li&gt;
&lt;li&gt;デスクトップにあるStart AGを起動する&lt;/li&gt;
&lt;li&gt;ホストマシンからブラウザでlocalhost:10034へアクセスする&lt;/li&gt;
&lt;li&gt;AllegroGraph WebViewへアクセスできたら、User anonymousのところからtest/xyzzyでログイン&lt;/li&gt;
&lt;li&gt;&lt;a href="http://franz.com/agraph/support/documentation/current/agraph-quick-start.html"&gt;Quick-Start&lt;/a&gt;にしたがって&lt;/li&gt;
&lt;li&gt;Create new repositoryにkennedyと入力しcreate&lt;/li&gt;
&lt;li&gt;http://localhost:10034/repositories/kennedyを開く&lt;/li&gt;
&lt;li&gt;from a server-side fileを押してfileのところから&lt;ul&gt;
&lt;li&gt;..で上に上がっていって、最終的に/home/franz/ag/tutorial/kennedy.ntriplesを選択&lt;/li&gt;
&lt;li&gt;OKで取り込まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Queriesから&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select ?p ?o WHERE {&amp;lt;http://www.franz.com/simple#person1&amp;gt; ?p ?o}&lt;/code&gt;クエリ投げてみて結果が見えれば成功&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;試しに他のデータも投入してみる&lt;/li&gt;
&lt;li&gt;新しくrepositoryを作って&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linkdata.org/home"&gt;linkdata.org&lt;/a&gt;から適当なデータを持ってくる&lt;ul&gt;
&lt;li&gt;今回はこれを試した &lt;a href="http://linkdata.org/work/rdf1s4668i/syukatsu_api.html"&gt;就活イベント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linkdata.org/api/1/rdf1s4668i/syukatsu_rdf.xml"&gt;rdf/xml&lt;/a&gt;を保存&lt;/li&gt;
&lt;li&gt;WebViewのfrom an uploaded fileからファイルを選択、フォーマットをRDF/XMLにしてOK&lt;/li&gt;
&lt;li&gt;取り込まれるもののPのところがエスケープされたまま入ってしまう(%E4%BC%9A%E5%A0%B4_みたいな)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回はここまで&lt;/p&gt;</summary><category term="lisp"></category><category term="allegrograph"></category></entry><entry><title>macOS 10.12.1にあげたらlibcryptoが見つからない</title><link href="https://holrock.github.io/macos-10121niagetaralibcryptogajian-tsukaranai.html" rel="alternate"></link><published>2016-11-02T00:00:00+09:00</published><updated>2016-11-02T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-11-02:macos-10121niagetaralibcryptogajian-tsukaranai.html</id><summary type="html">&lt;p&gt;macOSをSierraにあげました。&lt;/p&gt;
&lt;p&gt;その後xcode8.1のインストールをして、omacのビルドをするとlibcryptoが見つからずエラーになりました。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% ocaml setup.ml -build &lt;/span&gt;
&lt;span class="n"&gt;Finished&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;cached&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hoge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opam&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.03&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ocamlfind&lt;/span&gt; &lt;span class="n"&gt;ocamlopt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linkpkg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;cohttp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;cohttp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lwt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;conduit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;cryptokit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;lwt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;omac&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmx&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmx&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;
&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;library&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lcrypto&lt;/span&gt;
&lt;span class="n"&gt;clang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linker&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;invocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;caml_startup&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;during&lt;/span&gt; &lt;span class="n"&gt;linking&lt;/span&gt;
&lt;span class="n"&gt;Command&lt;/span&gt; &lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;
&lt;span class="n"&gt;Compilation&lt;/span&gt; &lt;span class="n"&gt;unsuccessful&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;building&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;cached&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;01.&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Failure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;Command&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hoge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opam&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.03&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ocamlbuild&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;terminated&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;homebrewで入れてるのでclangにパスを渡すため、LIBRARY_PATH環境変数に値を入れます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% export LIBRARY_PATH=$HOME/homebrew/Cellar/openssl/1.0.2j/lib&lt;/span&gt;
&lt;span class="c"&gt;% ocaml setup.ml -build &lt;/span&gt;
&lt;span class="n"&gt;Finished&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;cached&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.&lt;/span&gt;
&lt;span class="n"&gt;Finished&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;cached&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;01.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでビルドできるようになりました。&lt;/p&gt;
&lt;p&gt;あれ？てことはいままでsystem側のlibにリンクしてたんだろうか。&lt;/p&gt;</summary><category term="ocaml"></category></entry><entry><title>cattoyに画像proxyを入れました</title><link href="https://holrock.github.io/cattoynihua-xiang-proxyworu-remashita.html" rel="alternate"></link><published>2016-10-31T00:00:00+09:00</published><updated>2016-10-31T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-10-31:cattoynihua-xiang-proxyworu-remashita.html</id><summary type="html">&lt;p&gt;cattoy.infoでは外部画像を結構な数表示しています。
外部画像にはhttpでしかアクセスできないものもあり、せっかくwww.cattoy.infoが
https接続でも警告が出てしまいます。&lt;/p&gt;
&lt;p&gt;ちょうど、次の記事
&lt;a href="http://qiita.com/MintoAoyama/items/6cd71b84e6225f86f819"&gt;Camoで実現するセキュアな画像プロキシサーバ&lt;/a&gt;
を見かけたので&lt;/p&gt;
&lt;p&gt;camoクローンをocamlで作ってみました。
&lt;a href="https://github.com/holrock/omac"&gt;https://github.com/holrock/omac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;まだおもちゃみたいなものですが、一応本番で動いています。&lt;/p&gt;
&lt;p&gt;構成は https -&amp;gt; nginx(cacheもここで) -&amp;gt; http -&amp;gt; omac -&amp;gt; [画像server]&lt;/p&gt;
&lt;p&gt;今のままだとomacが落ちてもnginx側のキャッシュが有効で気がつかないことがあるようなので、
そのうちなんとかしないと。&lt;/p&gt;
&lt;p&gt;ほかにもデーモン化やログ管理なんかもやらないといけないのですが、なんとなく動いてしまうと満足してしまいますね。&lt;/p&gt;</summary><category term="omac"></category><category term="ocaml"></category><category term="cattoy"></category></entry><entry><title>conduit with homebrew openssl</title><link href="https://holrock.github.io/conduit-with-homebrew-openssl.html" rel="alternate"></link><published>2016-10-28T00:00:00+09:00</published><updated>2016-10-28T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-10-28:conduit-with-homebrew-openssl.html</id><summary type="html">&lt;h1&gt;現象&lt;/h1&gt;
&lt;p&gt;cohttpでhttpsから&lt;code&gt;Client.get&lt;/code&gt;すると
&lt;code&gt;(Failure "No SSL or TLS support compiled into Conduit")&lt;/code&gt;
とエラーになった&lt;/p&gt;
&lt;h1&gt;対策&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;CPPFLAGS=&amp;quot;-I&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/homebrew/opt/openssl/include&amp;quot; opam install ssl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;原因&lt;/h1&gt;
&lt;p&gt;homebrewでopensslを入れており、homebrewのpathを/usr/localから$HOME/homebrewに変えていたため、
opamでsslをビルドできなかった。&lt;/p&gt;</summary><category term="ocaml"></category></entry><entry><title>chainerで分類(できてない)</title><link href="https://holrock.github.io/chainerdefen-lei-dekitenai.html" rel="alternate"></link><published>2016-10-25T00:00:00+09:00</published><updated>2016-10-25T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-10-25:chainerdefen-lei-dekitenai.html</id><summary type="html">&lt;p&gt;cattoyでおもちゃの分類を自動でやりたくてchainerを試しました。
cattoyに登録されている画像を集めてきて手作業で分類、学習をやってみましたが、
やはり分類が面倒なのと、素材不足で全然だめでした。&lt;/p&gt;
&lt;p&gt;やったことをメモしておきます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pip install chainer pillow &lt;/li&gt;
&lt;li&gt;画像の数が多い猫じゃらし、爪とぎ、その他で分類してみる。images/nekojarashi images/tsumetogi images/otherとフォルダごとに分類&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ksksksks2.hatenadiary.jp/entry/20160327/1459061931"&gt;http://ksksksks2.hatenadiary.jp/entry/20160327/1459061931&lt;/a&gt;
を参考にリサイズとトレーニングデータに分ける&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;の所がlabelのままだとcompute_mean.pyでエラーになるので&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;に変更する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python chainer/examples/imagenet/compute_mean.py --root . train_list.txt&lt;/li&gt;
&lt;li&gt;python chainer/examples/imagenet/train_imagenet.py -g -1 --test --epoch 50 train_list.txt validate_list.txt&lt;ul&gt;
&lt;li&gt;GPUないので-1。遅い&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;epoch       iteration   main/loss   validation/main/loss  main/accuracy  validation/main/accuracy  lr
5           10          6.24469     3.47694               0.378125       0.777778                  0.01
10          20          3.63611     2.24688               0.571875       0.777778                  0.01
15          30          1.78171     1.3616                0.471875       0.111111                  0.01
20          40          1.13622     0.96606               0.521875       0.777778                  0.01
26          50          0.987004    0.830154              0.553125       0.777778                  0.01
31          60          0.974401    1.08021               0.54375        0.111111                  0.01
36          70          0.966584    0.874548              0.528125       0.777778                  0.01
41          80          0.96336     0.798205              0.553125       0.777778                  0.01
47          90          0.956709    0.891943              0.546875       0.777778                  0.01
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;と、まあ微妙な感じでした&lt;/p&gt;</summary><category term="chainer"></category><category term="python"></category></entry><entry><title>lmfsを見る</title><link href="https://holrock.github.io/lmfswojian-ru.html" rel="alternate"></link><published>2016-10-25T00:00:00+09:00</published><updated>2016-10-25T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-10-25:lmfswojian-ru.html</id><summary type="html">&lt;p&gt;lsmfとはMTIのLispマシンのファイルシステムです。
unlambda.comからCADRのイメージとソースが落とせるので中身を見てみます。&lt;/p&gt;
&lt;h1&gt;ダンプしてみる&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;http://unlambda.com/index.php?n=Main.Cadr からファイルを落とす&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CADR emulator tar file&lt;/li&gt;
&lt;li&gt;system 78.48 source file partition&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;usim.tar.gzを展開してlmfs.cをコンパイルする&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コンパイルエラーと実行時のオーバランを修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- a/lmfs.c    2006-07-11 07:01:32.000000000 +0900&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/lmfs.c    2016-09-18 22:24:12.000000000 +0900&lt;/span&gt;
&lt;span class="gu"&gt;@@ -127,6 +127,7 @@&lt;/span&gt;
 typedef int address;
 typedef int date;
 typedef char flag;
&lt;span class="gi"&gt;+typedef unsigned char u_char;&lt;/span&gt;

 typedef struct tapeinfo_s {
   date date;
&lt;span class="gu"&gt;@@ -467,7 +468,7 @@&lt;/span&gt;

   n = 0;

&lt;span class="gd"&gt;-  while (1) {&lt;/span&gt;
&lt;span class="gi"&gt;+  while (n &amp;lt; 64) {&lt;/span&gt;
     int left, use;

     left = remaining_access(&amp;amp;b);
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;カレントディレクトリで&lt;code&gt;mkdir tmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./lmfs -f FILE.78.48&lt;/code&gt;と動かすと、tmp内にファイルをダンプしてくれる&lt;/li&gt;
&lt;li&gt;FILE.sys99の方はsegmentation faultしてしまう&lt;/li&gt;
&lt;li&gt;CADR disk image(disk.img)はdiskmakerで結合しているので、そのままでは正当なパーティーションではない&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;00000000  4c 41 42 4c 01 00 00 00  2f 03 00 00 13 00 00 00  |LABL..../.......|
00000010  11 00 00 00 43 01 00 00  4d 43 52 31 4c 4f 44 31  |....C...MCR1LOD1|
00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000040  43 41 44 52 20 64 69 73  6b 6d 61 6b 65 72 20 69  |CADR diskmaker i|
00000050  6d 61 67 65 00 20 20 20  20 20 20 20 20 20 20 20  |mage.           |
00000060  75 63 61 64 72 2e 6d 63  72 2e 38 34 31 00 00 00  |ucadr.mcr.841...|
00000070  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;パーティションの構成&lt;/h1&gt;
&lt;h2&gt;partition-label&lt;/h2&gt;
&lt;p&gt;上記、unlambda.comで配布されているunix tar of source tree for system 78.48のtree/lmfs/fs-dcls.lispに定義がある&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defstorage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;partition-label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;version&lt;/span&gt;  &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="c1"&gt;;of structure&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;                         &lt;span class="nv"&gt;char-with-length&lt;/span&gt; &lt;span class="mi"&gt;30.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;label-size&lt;/span&gt;                                    &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;;in words&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;partition-id&lt;/span&gt;                                                 &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;addresses&lt;/span&gt; &lt;span class="nv"&gt;being&lt;/span&gt; &lt;span class="nv"&gt;disk-address&lt;/span&gt;
    &lt;span class="nv"&gt;primary-root&lt;/span&gt;                &lt;span class="c1"&gt;;for base partition&lt;/span&gt;
    &lt;span class="nv"&gt;free-store-info&lt;/span&gt;
    &lt;span class="nv"&gt;bad-track-info&lt;/span&gt;
    &lt;span class="nv"&gt;volume-table&lt;/span&gt;
  &lt;span class="nv"&gt;aspare1&lt;/span&gt; &lt;span class="nv"&gt;aspare2&lt;/span&gt; &lt;span class="nv"&gt;aspare3&lt;/span&gt; &lt;span class="nv"&gt;aspare4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;update-times&lt;/span&gt; &lt;span class="nv"&gt;being&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt;
    &lt;span class="nv"&gt;label-accepted&lt;/span&gt;              &lt;span class="c1"&gt;;put in use&lt;/span&gt;
    &lt;span class="nv"&gt;shut-down&lt;/span&gt;
    &lt;span class="nv"&gt;free-map-reconstructed&lt;/span&gt;
    &lt;span class="nv"&gt;structure-salvaged&lt;/span&gt;
    &lt;span class="nv"&gt;scavenged&lt;/span&gt;                       &lt;span class="c1"&gt;;searching reclaimer&lt;/span&gt;
    &lt;span class="nv"&gt;tspare1&lt;/span&gt; &lt;span class="nv"&gt;tspare2&lt;/span&gt; &lt;span class="nv"&gt;tspare3&lt;/span&gt; &lt;span class="nv"&gt;tspare4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;uid-generator&lt;/span&gt;    &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;monotone-generator&lt;/span&gt;   &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;root-list&lt;/span&gt;            &lt;span class="nv"&gt;fh-element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;partition-labelはpartitionの先頭に格納されている。固定長。&lt;/li&gt;
&lt;li&gt;CADRは32bitマシンなのでfixnumは&lt;code&gt;int32_t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char-with-length 30.&lt;/code&gt;で定義されているnameはパーティションラベル内に格納されると次のようになる&lt;ul&gt;
&lt;li&gt;int16_tで文字列長(fileなら4)&lt;/li&gt;
&lt;li&gt;char[30]で文字列&lt;/li&gt;
&lt;li&gt;lmfs.cだとchar[30]で読んでるが、&lt;code&gt;\０&lt;/code&gt;を含まない30文字の模様&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;後はprimary-rootをたどってfile-header -&amp;gt; fh-element -&amp;gt; dir-header -&amp;gt; directory-entryと読むことになる(root directory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FILE.78.48 imageのpartition-labelを見ると、primary-rootが7139&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;これはレコード番号なので、ブロックのサイズ(1024)とRECORD_SIZE_BLOCKS(4)をかけてオフセットを計算する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;7139 * 4 * 1024 = 29241344&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;29241344のアドレスから読めばfile-headerが読めるはず&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;だが謎の8byteが存在するため、file-headerは29241344+8の29241352からになっている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;またブロックサイズは1024byteっぽいが1008byteで区切られている(lmfs.cのensure_access関数)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1024byte目にアクセスすると1008byteの位置へ調整される&lt;/li&gt;
&lt;li&gt;各ブロックごとに16byteのパディングがある模様&lt;/li&gt;
&lt;li&gt;次のようにアクセスする場所を調整している&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0    1023 :    0 1007
1024 2047 : 1008 2015
2048 3071 : 2016 3025
3072 4095 : 3026 4033
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;この辺は調べきれず&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;file-header&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defstorage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file-header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;version&lt;/span&gt;    &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;logical-size&lt;/span&gt;   &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;bootload-generation&lt;/span&gt;  &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;;for validating&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;version-in-bootload&lt;/span&gt;  &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;;used in above&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;number-of-elements&lt;/span&gt; &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;;for later expansion&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ignore&lt;/span&gt; &lt;span class="nb"&gt;mod&lt;/span&gt; &lt;span class="nv"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;parts&lt;/span&gt; &lt;span class="nv"&gt;being&lt;/span&gt; &lt;span class="nv"&gt;fh-element&lt;/span&gt;       &lt;span class="c1"&gt;;and/or reformatting&lt;/span&gt;
    &lt;span class="nv"&gt;fh-header&lt;/span&gt;           &lt;span class="c1"&gt;;this header itself&lt;/span&gt;
    &lt;span class="nv"&gt;info&lt;/span&gt;            &lt;span class="c1"&gt;;header-resident info&lt;/span&gt;
    &lt;span class="nv"&gt;header-fm&lt;/span&gt;           &lt;span class="c1"&gt;;file map of header&lt;/span&gt;
    &lt;span class="nv"&gt;dire&lt;/span&gt;            &lt;span class="c1"&gt;;directory-entry-ifno&lt;/span&gt;
    &lt;span class="nv"&gt;property-list&lt;/span&gt;
    &lt;span class="nv"&gt;file-map&lt;/span&gt;
    &lt;span class="nv"&gt;pad-area&lt;/span&gt;            &lt;span class="c1"&gt;;many natures of obsolescence&lt;/span&gt;
    &lt;span class="nv"&gt;pad2-area&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;           &lt;span class="c1"&gt;;are supported&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;logical-sizseは&lt;code&gt;(logical-size   fixnum-bytes 2)&lt;/code&gt;となっているが、dump見ると4byteあるように見える&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;partsの所が各fh-elementのエントリーになる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;directory-entryはdireが差す場所になる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;コメントにもあるが、fh-headerはfile-header自身を指すエントリー。ちょっとわかりづらい&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;fh-element&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defstorage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fh-element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;     &lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;location&lt;/span&gt;   &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;;in words in log. headr&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;length&lt;/span&gt;   &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;      &lt;span class="c1"&gt;;in words&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;fh-elementのlocationとlengthはwordサイズなのでbyteサイズにするには*4する&lt;ul&gt;
&lt;li&gt;たとえはdirectory-entryは、29241352 + (0x1b*4) から (0x23*4)まで&lt;/li&gt;
&lt;li&gt;*DIR*がname&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% hexdump -C -s 29241460 -n 140 ./FILE.78.48&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be3074&lt;/span&gt;  &lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="c"&gt;..........|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be3084&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;................|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be3094&lt;/span&gt;  &lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="n"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="c"&gt;.........|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30a4&lt;/span&gt;  &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;................|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30b4&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="mi"&gt;79&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;c8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;.............y^.|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30c4&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;................|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30d4&lt;/span&gt;  &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="mi"&gt;79&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;c8&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="n"&gt;e3&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;^&lt;span class="c"&gt;.............|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30e4&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;................|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be30f4&lt;/span&gt;  &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;  &lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="c"&gt;............|&lt;/span&gt;
&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;be3100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;dir-header&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defstorage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dir-header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;version&lt;/span&gt;        &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;;structure version&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;         &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;         &lt;span class="nv"&gt;char-with-length&lt;/span&gt; &lt;span class="mi"&gt;30.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;numbers&lt;/span&gt; &lt;span class="nv"&gt;being&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nv"&gt;number-of-entries&lt;/span&gt;          &lt;span class="c1"&gt;;for scanning&lt;/span&gt;
  &lt;span class="nv"&gt;free-entry-list&lt;/span&gt;         &lt;span class="c1"&gt;;for easier alloc&lt;/span&gt;
  &lt;span class="nv"&gt;entries-index-offset&lt;/span&gt;       &lt;span class="c1"&gt;;to find first one&lt;/span&gt;
  &lt;span class="nv"&gt;direntry-size&lt;/span&gt;         &lt;span class="c1"&gt;;for scanning&lt;/span&gt;
  &lt;span class="nv"&gt;entries-per-block&lt;/span&gt;          &lt;span class="c1"&gt;;==&lt;/span&gt;

  &lt;span class="nv"&gt;default-generation-retention-count&lt;/span&gt;
  &lt;span class="nv"&gt;uid-path-offset&lt;/span&gt;
  &lt;span class="nv"&gt;uid-path-length&lt;/span&gt;
  &lt;span class="nv"&gt;hierarchy-depth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default-volid&lt;/span&gt;      &lt;span class="kt"&gt;fixnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;;for creation&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;auto-expunge-p&lt;/span&gt;     &lt;span class="nv"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;auto-expunge-interval&lt;/span&gt;   &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;auto-expunge-last-time&lt;/span&gt;  &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default-link-transparencies&lt;/span&gt; &lt;span class="nv"&gt;link-transparencies&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;dir-headerの直後に、number-of-entries * directory-entryのサイズだけdirectory-entryが格納されている&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;directory-entry&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大きいので省略&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defstorage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;directory-entry&lt;/span&gt; &lt;span class="ss"&gt;:abbrev&lt;/span&gt; &lt;span class="nv"&gt;dire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file-name&lt;/span&gt;          &lt;span class="nv"&gt;char-with-length&lt;/span&gt; &lt;span class="mi"&gt;30.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;;File name, to 30 chars&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file-type&lt;/span&gt;                &lt;span class="nv"&gt;char-with-length&lt;/span&gt; &lt;span class="mi"&gt;14.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="c1"&gt;;Extension&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file-version&lt;/span&gt;               &lt;span class="nv"&gt;fixnum-bytes&lt;/span&gt; &lt;span class="mi"&gt;3.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          &lt;span class="c1"&gt;;Generation&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;record-0-address&lt;/span&gt;   &lt;span class="nv"&gt;disk-address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;;how to find the file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;file-name, file-typeなどにファイルの情報&lt;/li&gt;
&lt;li&gt;record-0-addressがパーティションに格納されているレコードのアドレスになるので、そこからまたfile-headerを読んでいくことになる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この辺で力尽きました。
8byteや1008byte境界のあたりがわからず。
&lt;a href="http://www.unlambda.com/cadr/aimemo528_75pgs.pdf"&gt;aimemo528_75pgs.pdf&lt;/a&gt;のDisk structureあたりの制約なのかなあ。&lt;/p&gt;</summary><category term="lisp"></category><category term="lmfs"></category><category term="lispmachine"></category></entry><entry><title>cattoy memo</title><link href="https://holrock.github.io/cattoy-memo.html" rel="alternate"></link><published>2016-10-24T00:00:00+09:00</published><updated>2016-10-24T00:00:00+09:00</updated><author><name>horlock</name></author><id>tag:holrock.github.io,2016-10-24:cattoy-memo.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cattoy.info"&gt;https://www.cattoy.info&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Cat Exercise Wheelの使ってくれなさのあまり作りました。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;さくらVPS mem1G/2Coreプラン&lt;/li&gt;
&lt;li&gt;CentOS 6.8&lt;/li&gt;
&lt;li&gt;nginx &lt;ul&gt;
&lt;li&gt;http2に対応するためビルドした&lt;/li&gt;
&lt;li&gt;ついでにLibreSSLにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nginx version: nginx/1.11.5
built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) 
built with LibreSSL 2.5.0
TLS SNI support enabled
configure arguments: --prefix=/opt/nginx-1.11.5 --with-http_ssl_module --with-http_gzip_static_module --with-http_stub_status_module --with-http_v2_module --with-http_realip_module --with-openssl=../libressl-2.5.0 --with-cc-opt=&amp;#39;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -march=native&amp;#39; --with-ld-opt=&amp;#39; -Wl,-E -lrt&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Let's Encryptで証明書とってhttp2化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自配信コンテンツはほとんどないので意味はない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ruby 2.3.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;rails 5.0.1&lt;ul&gt;
&lt;li&gt;puma&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;sqlite3&lt;ul&gt;
&lt;li&gt;DB動かすほどのサーバーじゃないのでとりあえず&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認証はsorcery&lt;/li&gt;
&lt;li&gt;エラー通知はexception_notification -&amp;gt; slack-notifierでcattoy.slack -&amp;gt; https://cattoy.slack.com/&lt;/li&gt;
&lt;li&gt;itamae&lt;ul&gt;
&lt;li&gt;nginx -&amp;gt; pumaまわりが未完成&lt;/li&gt;
&lt;li&gt;面倒になってきたのでdockerの方が楽そうな気がしてきた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSSフレームワークは&lt;a href="https://github.com/kathamo/Kathamo/tree/master/Kathamo-3.0.0"&gt;kathamo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;navbarのopen/closeとturbolinksが相性が悪く、はまった。turbolinksは無効化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="cattoy"></category><category term="ruby"></category><category term="rails"></category></entry></feed>